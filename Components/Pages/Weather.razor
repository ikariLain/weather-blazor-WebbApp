@page "/weather"
@attribute [StreamRendering]

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data fetched from OpenWeatherMap.</p>

@if (weatherData == null)
{
    <p>
        <em>Loading weather data...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>City</th>
            <th>Temperature (C)</th>
            <th>Temperature (F)</th>
            <th>Weather</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>@weatherData.Name</td>
            <td>@weatherData.Main.TempC</td>
            <td>@weatherData.Main.TempF</td>
            <td>@weatherData.Weather.First().Main</td>
            <td>@weatherData.Weather.First().Description</td>
        </tr>
        </tbody>
    </table>
}

@code {
    private WeatherResponse? weatherData;
    [Inject] private IConfiguration Configuration { get; set; } = default!;
    [Inject] private HttpClient Http { get; set; } = default!;
    
    private string ApiKey => Configuration.GetSection("OpenWeatherMap:ApiKey").Value ?? 
                             throw new InvalidOperationException("API key not found in configuration");
    private const string ApiUrl = "http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=";

    protected override async Task OnInitializedAsync()
    {
        try 
        {
            var response = await Http.GetFromJsonAsync<WeatherResponse>($"{ApiUrl}{ApiKey}&units=metric");
            if (response != null)
            {
                weatherData = response;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    // Data-klasser för att matcha API-svaret
    private class WeatherResponse
    {
        public string Name { get; set; } = default!;
        public MainInfo Main { get; set; } = default!;
        public List<WeatherInfo> Weather { get; set; } = default!;
    }

    private class MainInfo
    {
        public double Temp { get; set; }
        public int TempC => (int)Temp;
        public int TempF => 32 + (int)(Temp / 0.5556);
    }

    private class WeatherInfo
    {
        public string Main { get; set; } = default!;
        public string Description { get; set; } = default!;
    }
}
